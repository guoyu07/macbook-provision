- hosts: all
  connection: local
  gather_facts: no
  sudo: no
  vars:
    homebrew_taps:
      - homebrew/binary
      - homebrew/dupes
    homebrew_packages:
      - { name: ag }
      - { name: autoconf }
      - { name: automake }
      - { name: awscli }
      - { name: cmake }
      - { name: coreutils }
      - { name: ctags }
      - { name: curl }
      - { name: direnv }
      - { name: git }
      - { name: git-now }
      - { name: go, install_options: cross-compile-common }
      - { name: graphviz }
      - { name: imagemagick }
      - { name: jq }
      - { name: libiconv }
      - { name: lua }
      - { name: lynx }
      - { name: nkf }
      - { name: nmap }
      - { name: npm }
      - { name: nvm }
      - { name: openssh }
      - { name: openssl }
      - { name: openssl, state: linked, install_options: force }
      - { name: packer }
      - { name: perl-build }
      - { name: pkg-config }
      - { name: plenv }
      - { name: pwgen }
      - { name: pyenv }
      - { name: python }
      - { name: rbenv }
      - { name: readline }
      - { name: reattach-to-user-namespace }
      - { name: redis }
      - { name: ruby-build }
      - { name: socat }
      - { name: sqlite }
      - { name: tmux }
      - { name: tree }
      - { name: vim, install_options: with-lua }
      - { name: wget }
      - { name: zsh, install_options: without-etcdir }
  tasks:
    - name: homebrewのtapリポジトリを追加
      homebrew_tap: tap={{ item }} state=present
      with_items: homebrew_taps

    - name: homebrewをアップデート
      homebrew: update_homebrew=yes

    - name: brewパッケージをインストール
      homebrew: >
        name={{ item.name }}
        state={{ item.state | default('latest') }}
        install_options={{
          item.install_options | default() | join(',')
          if item.install_options is not string
          else item.install_options
        }}
      with_items: homebrew_packages
      register: brew_result

    - name: brewパッケージの情報保存ディレクトリを作成
      file: path=brew_info state=directory

    - name: brewパッケージの情報を保存
      shell: brew info {{ item }} > brew_info/{{ item }}
      with_items: brew_result.results | selectattr('changed') | map(attribute='item') | map(attribute='name') | list

